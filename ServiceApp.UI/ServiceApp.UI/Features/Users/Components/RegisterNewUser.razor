@page "/registernewuser"
@inject ISender Sender
@inject NavigationManager NavigationManager



<div class="container-xxl mb-3">
    <div class="mt-3">
        <h3>RegisterUser</h3>
    </div>
    <div class="col-12 col-md-6">
        <EditForm Model="registerUserModel">
            <DataAnnotationsValidator />

            <div class="mb-3">
                <label for="UserName" class="form-label">Bruker navn</label>
                <InputText id="UserName" class="form-control" @bind-Value="registerUserModel.UserName" />
                <ValidationMessage For="@(() => registerUserModel.UserName)" />
            </div>
            <div class="mb-3">
                <label for="Password" class="form-label">Passord</label>
                <InputText id="Password" class="form-control" @bind-Value="registerUserModel.Password" />
                <ValidationMessage For="@(() => registerUserModel.Password)" />
            </div>
            <div class="mb-3">
                <label for="ConfirmPassword" class="form-label">Gjenta Passord</label>
                <InputText id="ConfirmPassword" class="form-control" @bind-Value="registerUserModel.ConfirmPassword" />
                <ValidationMessage For="@(() => registerUserModel.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
        </EditForm>
    </div>
</div>
@code {
    [SupplyParameterFromForm(FormName = "RegisterUserForm")]
    public RegisterUserModel registerUserModel { get; set; } = new RegisterUserModel();

    private string ErrorMessage { get; set; } = string.Empty;

    private async Task HandleValidSubmit()
    {
        var command = new RegisterNewUserCommand
        {
            UserName = registerUserModel.UserName,
            Email = registerUserModel.Email,
            Password = registerUserModel.Password,
           
        };

        var result = await Sender.Send(command);
        if(result.Success)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ErrorMessage = result.Error ?? "An error occurred";
        }
    }
}
