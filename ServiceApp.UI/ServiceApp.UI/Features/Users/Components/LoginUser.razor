@page "/LoginUser"
@inject ISender Sender
@inject NavigationManager NavigationManager

<PageTitle>Logg inn</PageTitle>

<div class="container-xxl mb-3"> 
    <div class="col-12 col-md-6">
        <div class="mt-3 d-flex justify-content-center align-content-center">
            <h3>Logg inn</h3>
        </div>
        <EditForm Model="loginUserModel" OnValidSubmit="HandleValidSubmit" FormName="LoginUserForm">
            <DataAnnotationsValidator />

            <div class="mb-3">
                <label for="UserName" class="form-label">Brukernavn</label>
                <InputText id="UserName" class="form-control" @bind-Value="loginUserModel.UserName" />
                <ValidationMessage For="@(() => loginUserModel.UserName)" />
            </div>
            <div class="mb-3">
                <label for="Password" class="form-label">Passord</label>
                <InputText id="Password" type="password" class="form-control" @bind-Value="loginUserModel.Password" />
                <ValidationMessage For="@(() => loginUserModel.Password)" />
            </div>
            <button type="submit" class="btn btn-primary">Logg inn</button>
         
        </EditForm>
    </div>
</div>
@code {
    [SupplyParameterFromForm(FormName = "LoginUserForm")]
    public LoginUserModel loginUserModel { get; set; } = new LoginUserModel();

    private string ErrorMessage { get; set; } = string.Empty;

    private async Task HandleValidSubmit()
    {
        var command = new LoginUserCommand
        {
            UserName = loginUserModel.UserName,
            Password = loginUserModel.Password
        };

        var result = await Sender.Send(command);
        if(result.Success)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ErrorMessage = result.Error ?? "An error occurred";
        }
    }
}
