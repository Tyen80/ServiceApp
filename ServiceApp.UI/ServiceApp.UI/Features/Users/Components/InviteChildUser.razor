@page "/InviteChildUser"
@using ServiceApp.Application.Authentication
@using ServiceApp.Application.Emails.SendChildInvite
@inject ISender Sender
@inject IUserService UserService
@inject NavigationManager NavigationManager


<EditForm Model="inviteChildUserModel" OnValidSubmit="HandleValidSubmit" FormName="InviteForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText @bind-Value="inviteChildUserModel.Email" class="form-control" />
    </div>
    <div class="mb-3">
        <label class="form-label">FamilyId</label>
        <InputText @bind-Value="inviteChildUserModel.FamilyId" class="form-control" readonly />
    </div>

    <button type="submit" class="btn btn-primary">Send Invite</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private InviteChildUserModel inviteChildUserModel { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var familyId = await UserService.GetCurrentUserByFamilyIdAsync();
        inviteChildUserModel.FamilyId = familyId;
    }

    private async Task HandleValidSubmit()
    {
        var result = await Sender.Send(new SendChildInviteCommand
            {
                Email = inviteChildUserModel.Email,
                FamilyId = inviteChildUserModel.FamilyId
            });
    }
}
